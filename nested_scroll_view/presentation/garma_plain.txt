Slide 1 — NestedScrollView — Quick Demo
- Flexible header that collapses while inner content keeps scrolling
- Ideal for gallery or content apps that need a prominent hero area
- Small API surface, big UX gain
Speaker notes: Intro — briefly state the goal: keep an expressive header while letting content take the stage. (15–25s)


Slide 2 — Problem & Motivation
- Large headers show artwork/branding but waste space when content is primary
- Pinned headers keep context but reduce visible content
- We want a header that is prominent when needed and yields space when not
Speaker notes: Explain the UX tradeoff on mobile: when a big header is useful and why collapsing helps. (40–60s)


Slide 3 — Architecture
- Outer scroll: SliverAppBar inside a NestedScrollView
- Inner scrollables: TabBarView / ListView / GridView — independent scrolls
- NestedScrollView coordinates outer slivers and inner scroll positions
Speaker notes: Walk the flow: SliverAppBar -> NestedScrollView -> TabBarView -> inner lists. (50–70s)


Slide 4 — Key components
- SliverAppBar — flexibleSpace, expandedHeight, pinned
- NestedScrollView — headerSliverBuilder + body coordination
- TabBarView / ListView / GridView — inner content panes
Speaker notes: Define each API and where to customize (expandedHeight, pinned, flexibleSpace). (50–70s)


Slide 5 — Code: SliverAppBar (real snippet)
- Shows how to create the collapsible header and attach a flexible space
- Use safe network image/loading handlers for large artwork
Code (Dart):
SliverAppBar(
  pinned: true,
  expandedHeight: 320,
  backgroundColor: Colors.transparent,
  elevation: 0,
  flexibleSpace: FlexibleSpaceBar(
    background: HeaderArtwork.light(), // use a local asset or null to avoid external URLs
  ),
)
Speaker notes: Explain expandedHeight, pinned, and flexibleSpace. Mention using loadingBuilder/errorBuilder for network images. (60–80s)


Slide 6 — Code: NestedScrollView + Tabs (real snippet)
- Coordinates header slivers with inner TabBarView panes
- Inner panes are regular scrollables (ListView / GridView)
Code (Dart):
NestedScrollView(
  headerSliverBuilder: (context, innerScrolled) => [sliverAppBar],
  body: TabBarView(
    children: [GalleryGrid(), AttributesList(), ChatView()],
  ),
)
Speaker notes: Walk headerSliverBuilder and body. Show how each tab can host its own scrollable content. (60–90s)


Slide 7 — Demo steps (what to show live)
- Open on Gallery tab — point out the header artwork and title
- Scroll slowly to show the header collapse and observe pin behaviour
- Switch tabs and show inner lists/tiles that scroll independently
- Scroll up to re-expand the header and show smooth reflow
Speaker notes: Outline the live demo actions and timings; remind to scroll slowly so attendees can observe transitions. (90–120s)


Slide 8 — Takeaway & Resources
- NestedScrollView + SliverAppBar provide an elegant way to keep headers expressive without sacrificing content space
- Use flexibleSpace for artwork and provide image loading fallbacks
- See the repo: lib/src/nested_scroll_demo.dart, header_artwork.dart, gallery_card.dart
Speaker notes: Close by summarising the practical takeaway and link to the code in the repo. Offer to share code after the talk. (20–30s)
